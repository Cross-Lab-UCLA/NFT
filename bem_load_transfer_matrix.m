% bem_load_transfer_matrix() Loads the BEM transfer matrix with extension 'ext'.
%       The matrix file name is defined by <session.name>.<ext>.
%       Matrix is placed into the session structure with a field name 'ext'.
%
% Usage:
%   >> session = bem_load_transfer_matrix(session, ext);
%
% Inputs:
%   session - session structure generated by bem_create_session().
%   ext - describes the matrix type. The following type is defined:
%     'tmte' - BEM Transfer matrix.
%
% Outputs:
%   session - updated session structure.
%
% Author: Zeynep Akalin Acar, SCCN, 2007

% Copyright (C) 2007 Zeynep Akalin Acar, SCCN, zeynep@sccn.ucsd.edu
%
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 2 of the License, or
% (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

function session = bem_load_transfer_matrix(session, ext)

% check session
if ~isempty(find(isfield(session, {'name', 'model', 'Smatrix'}) == 0,1))
    error('BEM:bem_load_transfer_matrix:session','%s','Invalid session');
end
model = session.model;

if ~ischar(ext)
    error('BEM:bem_load_transfer_matrix:ext','%s','Invalid extension');
end
ext = lower(ext);
if ~(strcmp(ext,'tmte'))
    error('BEM:bem_load_transfer_matrix:ext','%s','Unknown matrix type');
end

try
    m = load(sprintf('%s.%s', session.name, ext));
catch
    error('BEM:bem_load_model_matrix:ext','Failed to load %s.%s', model.name, ext);
end

session.(ext) = m;
